import csv
import cosmolopy.distance as cd
import numpy as np

cosmo = {'omega_M_0':0.274, 'omega_lambda_0':0.726, 'omega_k_0':0.0, 'h':0.71}

#
#
#
def Extract_EMGs_CSV(object_id='all',object_type='all', transition='all', flag_include='yes',verbose='no'):
	"""This function reads in the CSV file generated by Number, extracts the entries that fullfull
	the 'object_type' and 'transition' criteria, and returns their ID, z, ez, SdV, and eSdV. Only
	objects that have include=1 in the csv file are considered"""

	data = np.zeros((1000,),dtype=[('ID',list), ('type',list), ('transition',list), ('z',float), ('ez',float), \
								   ('FWHM',float), ('eFWHM',float), ('SdV',float), ('eSdV',float), \
								   ('L_transition',float), ('eL_transition',float), ('magnification',float), \
								   ('include',list),('reference',list)])
		   


	i=0
	cr = csv.reader(open("../../data/EMGs.csv","rb"))

	data['reference'][0]='test'

	for row in cr:
		if row[2] == '0' or row[2] == '1':
			data['ID'][i]=row[0].strip()
			data['include'][i]=row[2].strip()
			data['type'][i]=row[4].strip()
			data['transition'][i]=row[5].strip()
			data['z'][i]=row[8]
			data['ez'][i]=row[9]
			if row[8] == '-999':
				data['z'][i]=row[6]
				data['ez'][i]=row[7]
			if row[6] == '-999':
				data['z'][i]=row[8]
				data['ez'][i]=row[9]
			data['FWHM'][i]=row[10]
			data['eFWHM'][i]=row[11]
			data['SdV'][i]=row[12]
			data['eSdV'][i]=row[13]
			data['magnification'][i]=row[14]
			data['reference'][i]=row[16]
			i=i+1
	data=data[0:i]
	
	if object_id != 'all':
		indices_keep=[i for i,x in enumerate(data['ID']) if object_id in x]
		data=data[indices_keep]
	if object_type != 'all':
		indices_keep=[i for i,x in enumerate(data['type']) if object_type in x]
		data=data[indices_keep]
	if transition != 'all':
		indices_keep=[i for i,x in enumerate(data['transition']) if transition in x]
		data=data[indices_keep]
	if flag_include == 'yes':
		indices_keep=[i for i,x in enumerate(data['include']) if '1' in x]
		data=data[indices_keep]

	if verbose == 'yes':
		List_EMGs(data)

	return data


#
#
#
def Make_Unique_EMG_Fluxes(data,transition):

	#Fix multiple occurences of certain sources. Take the average mean
	#CO(1-0); Fix instances of z=-999, u=-999 etc

	#fix u=-999
	indices=[i for i, item in enumerate(data['magnification']) if item == -999]
	if indices != []:
		for j in indices:
			data['magnification'][j]=1.0
	if transition == '12CO(1-0)':
		#    SMMJ02399-0136: Ivison+10 (0.7 +/- 0.18), Thomson+12 (0.6 +/- 0.12)
		#                    we take the weighted average: sdv = 0.63  +/-  0.10
		#                                                  fwhm = -999 +/- -999 
		#                                                  z_co = 2.8083 +/- 0.0007
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ02399-0136']
		if indices != []:
			data['SdV'][indices[0]]=0.63
			data['eSdV'][indices[0]]=0.10
			data['FWHM'][indices[0]]=-999
			data['eFWHM'][indices[0]]=-999
			data['z'][indices[0]]=2.8083
			data['ez'][indices[0]]=0.0007
			data['ID'][indices[1]]='REMOVE'
		#    SMMJ09431+4700-H7: Hainline+06 (<0.13), Riechers+11 (0.143 +/- 0.03)
		#                                                  fwhm = 580 +/- 143
		#                                                  z_co = 3.3442 +/- 0.0009
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ09431+4700-H7']
		if indices != []:
			data['ID'][indices[0]]='REMOVE'
		#    SMMJ13120+4242: Hainline+06 (0.42 +/- 0.07), Riechers+11 (0.464 +/- 0.081)
		#                    we take the weighted average: sdv = 0.44  +/-  0.05
		#                                                  fwhm = 1085 +/- 148 
		#                                                  z_co = 3.405 +/- 0.001
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ13120+4242']
		if indices != []:
			data['SdV'][indices[0]]=0.44
			data['eSdV'][indices[0]]=0.05
			data['FWHM'][indices[0]]=1085.
			data['eFWHM'][indices[0]]=148.
			data['z'][indices[0]]=3.405
			data['ez'][indices[0]]=0.001
			data['ID'][indices[1]]='REMOVE'
		#    SMMJ14009+0252: Harris+10 (0.55 +/- 0.06), Thomson+12 (0.31 +/- 0.02)
		#                    we take the weighted average: sdv = 0.33  +/-  0.02
		#                                                  fwhm = 643 +/- -999 
		#                                                  z_co = 2.9332 +/- 0.0001
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ14009+0252']
		if indices != []:
			data['SdV'][indices[1]]=0.33
			data['eSdV'][indices[1]]=0.02
			data['FWHM'][indices[1]]=643.
			data['eFWHM'][indices[1]]=-999.
			data['z'][indices[1]]=2.9332
			data['ez'][indices[1]]=0.0001
			data['ID'][indices[0]]='REMOVE'
		#    SMMJ14011+0252: Harris+10 (0.50 +/- 0.06), Sharon+13 (0.32 +/- 0.03)
		#                    we take the weighted average: sdv = 0.36  +/-  0.03
		#                                                  fwhm = 151 +/- 19 
		#                                                  z_co = 2.5652 +/- 0.0002
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ14011+0252']
		if indices != []:
			data['SdV'][indices[1]]=0.36
			data['eSdV'][indices[1]]=0.03
			data['FWHM'][indices[1]]=151.
			data['eFWHM'][indices[1]]=19.
			data['z'][indices[1]]=2.5652
			data['ez'][indices[1]]=0.0002
			data['ID'][indices[0]]='REMOVE'
		#    HXMM01: Fu+13 (1.7 +/- 0.3), Fu+13 (2.3 +/- 0.3)
		#                    we take the weighted average: sdv = 2.0  +/-  0.2
		#                                                  fwhm = 1310 +/- 105 
		#                                                  z_co = 2.3077 +/- 0.0005
		indices=[i for i, item in enumerate(data['ID']) if item == 'HXMM01']
		if indices != []:
			data['SdV'][indices[1]]=2.0
			data['eSdV'][indices[1]]=0.2
			data['FWHM'][indices[1]]=1310.
			data['eFWHM'][indices[1]]=105.
			data['z'][indices[1]]=2.3077
			data['ez'][indices[1]]=0.0005
			data['ID'][indices[0]]='REMOVE'
		#    H-ATLASJ090311.6+003906: Frayer+11 (1.11 +/- 0.25), Harris+12 (1.12 +/- 0.09)
		#							  Valtchanov+11 (1.26 +/- 0.2)
		#                    we take the weighted average: sdv = 1.14  +/-  0.08
		#                                                  fwhm = 431 +/- 20 
		#                                                  z_co = 3.0425 +/- 0.0003
		indices=[i for i, item in enumerate(data['ID']) if item == 'H-ATLASJ090311.6+003906']
		if indices != []:
			data['SdV'][indices[0]]=1.14
			data['eSdV'][indices[0]]=0.08
			data['FWHM'][indices[0]]=431.
			data['eFWHM'][indices[0]]=20.
			data['z'][indices[0]]=3.0425
			data['ez'][indices[0]]=0.0003
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
		#    H-ATLASJ091305.0-005343: Frayer+11 (0.65 +/- 0.19), Harris+12 (0.76 +/- 0.12)
		#                    we take the weighted average: sdv = 0.73  +/-  0.10
		#                                                  fwhm = 365 +/- 34 
		#                                                  z_co = 2.6255 +/- 0.0004
		indices=[i for i, item in enumerate(data['ID']) if item == 'H-ATLASJ091305.0-005343']
		if indices != []:
			data['SdV'][indices[0]]=0.73
			data['eSdV'][indices[0]]=0.10
			data['FWHM'][indices[0]]=365.
			data['eFWHM'][indices[0]]=34.
			data['z'][indices[0]]=2.6255
			data['ez'][indices[0]]=0.0004
			data['ID'][indices[1]]='REMOVE'
		#SMMJ2135-0102: Swinbank+10 (GBT: 2.3+/-0.1), Ivison+10b (VLA: 2.14 +/- 0.12), Danielson+11 (GBT: 2.16 +/- 0.11)
		#				 we take the weighted average: sdv = 2.21  +/-  0.06
		#											   fwhm = 290 +-/ 90  (Swinbank+10 value)
		#                                              z_co = 2.3259 +/- 0.0001 (Swinbank+10 value)
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ2135-0102']
		if indices != []:
			data['SdV'][indices[0]]=2.21
			data['eSdV'][indices[0]]=0.06
			data['FWHM'][indices[0]]=290.
			data['eFWHM'][indices[0]]=90.
			data['z'][indices[0]]=2.3259
			data['ez'][indices[0]]=0.0001
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
		#MG0751+2716: Riechers+11 (JVLA: 0.494+/-0.105), Riechers+11 (GBT: 0.55 +/- 0.095)
		#				 we take the weighted average: sdv = 0.52  +/-  0.07
		#                                                  fwhm = 317 +/- 50 
		#                                                  z_co = 3.1992 +/- 0.0003
		indices=[i for i, item in enumerate(data['ID']) if item == 'MG0751+2716']
		if indices != []:
			data['SdV'][indices[0]]=0.52
			data['eSdV'][indices[0]]=0.07
			data['FWHM'][indices[0]]=317.
			data['eFWHM'][indices[0]]=50.
			data['z'][indices[0]]=3.1992
			data['ez'][indices[0]]=0.0003
			data['ID'][indices[1]]='REMOVE'
		#APM08279+5255: Lewis+02 (0.22+/-0.05),  Riechers+06 (0.152 +/- 0.02)
		#               Papadopoulos+01 (0.15+/-0.045), Riechers+09 (0.168 +/- 0.015)
		#				 we take the weighted average: sdv = 0.16  +/-  0.01
		#                                                  fwhm = 556 +/- 55 
		#                                                  z_co = 3.9122 +/- 0.0007
		indices=[i for i, item in enumerate(data['ID']) if item == 'APM08279+5255']
		if indices != []:
			data['SdV'][indices[0]]=0.16
			data['eSdV'][indices[0]]=0.01
			data['FWHM'][indices[0]]=556.
			data['eFWHM'][indices[0]]=55.
			data['z'][indices[0]]=3.9122
			data['ez'][indices[0]]=0.0007
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
			data['ID'][indices[3]]='REMOVE'
		#IRASF10214+4724: Tsuboi+92 (2.9+/-0.5),  Riechers+11 (0.434 +/- 0.047)
		#                 Riechers+11 (0.337 +/- 0.045)
		#				 we take the weighted average:     sdv = 0.38  +/-  0.03
		#                                                  fwhm = 179 +/- 23 
		#                                                  z_co = 2.2855 +/- 0.0001
		indices=[i for i, item in enumerate(data['ID']) if item == 'IRASF10214+4724']
		if indices != []:
			data['SdV'][indices[0]]=0.38
			data['eSdV'][indices[0]]=0.03
			data['FWHM'][indices[0]]=179.
			data['eFWHM'][indices[0]]=23.
			data['z'][indices[0]]=2.2855
			data['ez'][indices[0]]=0.0001
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
		#H1413+117: Riechers+11 (1.378+/-0.25),  Riechers+11 (1.358 +/- 0.065)
		#           Riechers+11 (1.406 +/- 0.053) 
		#				 we take the weighted average:     sdv = 1.39  +/-  0.04
		#                                                  fwhm = 439 +/- 15 
		#                                                  z_co = 2.5576 +/- 0.0001
		indices=[i for i, item in enumerate(data['ID']) if item == 'H1413+117']
		if indices != []:
			data['SdV'][indices[0]]=1.39
			data['eSdV'][indices[0]]=0.04
			data['FWHM'][indices[0]]=439.
			data['eFWHM'][indices[0]]=15.
			data['z'][indices[0]]=2.5576
			data['ez'][indices[0]]=0.0001
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
		#PSSJ2322+1944: Carilli+02 (0.19+/-0.08),  Riechers+06 (0.155 +/- 0.013)
		#				 we take the weighted average:     sdv = 0.16  +/-  0.01
		#                                                  fwhm = 190 +/- 14 
		#                                                  z_co = 4.1182 +/- 0.0002
		indices=[i for i, item in enumerate(data['ID']) if item == 'PSSJ2322+1944']
		if indices != []:
			data['SdV'][indices[0]]=0.16
			data['eSdV'][indices[0]]=0.01
			data['FWHM'][indices[0]]=190.
			data['eFWHM'][indices[0]]=14.
			data['z'][indices[0]]=4.1182
			data['ez'][indices[0]]=0.0002
			data['ID'][indices[1]]='REMOVE'

	if transition == '12CO(2-1)':
		#    SMMJ123711+622212: 
		#		Carilli+10 	(0.64 +/- 0.15)		(-999 +/- -999) (4.055 +/- 0.02)
		#		Carilli+11 	(0.87 +/- 0.088)	(679 +/- 88)	(4.0554 +/-	-999)	
		#		Hodge+12 	(1.0 +/- 0.3)		(730 +/- 140)	(4.0548 +/-	-999)
		#                    we take the weighted average: sdv = 0.82  +/-  0.07
		#                                                  fwhm = 512 +/- 75 
		#                                                  z_co = 4.055 +/- 0.02
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ123711+622212']
		if indices != []:
			data['SdV'][indices[0]]=0.82
			data['eSdV'][indices[0]]=0.07
			data['FWHM'][indices[0]]=693.
			data['eFWHM'][indices[0]]=75.
			data['z'][indices[0]]=4.055
			data['ez'][indices[0]]=0.02
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
		#    LESS65:
		#		Swinbank+12	(4.4445 +/- 0.0005) from CII
		indices=[i for i, item in enumerate(data['ID']) if item == 'LESS65']
		if indices != []:
			data['z'][indices[0]]=4.4445
			data['ez'][indices[0]]=0.0005
	#CO(3-2)
	if transition == '12CO(3-2)':
		#    SMMJ02399-0136: Frayer+98 (3.00 +/- 0.40), Genzel+03 (3.10 +/- 0.4)
		#                    we take the weighted average: sdv = 3.05  +/-  0.28
		#                                                  fwhm = 764 +/- 74 
		#                                                  z_co = 2.80760 +/- 0.0002
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ02399-0136']
		if indices != []:
			data['SdV'][indices[0]]=3.05
			data['eSdV'][indices[0]]=0.28
			data['FWHM'][indices[0]]=764
			data['eFWHM'][indices[0]]=74
			data['z'][indices[0]]=2.80760
			data['ez'][indices[0]]=0.0002
			data['ID'][indices[1]]='REMOVE'
		#    SMMJ12355+6215: Tacconi+06 (1.6 +/- 0.2), Bothwell+13 (1.68 +/- 0.17)
		#                    we take the weighted average: sdv = 1.65  +/-  0.13
		#                                                  fwhm = 614 +/- 46 
		#                                                  z_co = 2.20210 +/- 0.0007
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ12355+6215']
		if indices != []:
			data['SdV'][indices[0]]=1.65
			data['eSdV'][indices[0]]=0.13
			data['FWHM'][indices[0]]=614
			data['eFWHM'][indices[0]]=46
			data['z'][indices[0]]=2.20210
			data['ez'][indices[0]]=0.0007
			data['ID'][indices[1]]='REMOVE'
		#    SMMJ14011+0252: Frayer+99 (2.40 +/- 0.3), Bothwell+13 (2.80 +/- 0.3)
		#                    we take the weighted average: sdv = 2.60  +/-  0.21
		#                                                  fwhm = 191 +/- 11 
		#                                                  z_co = 2.56530 +/- 0.00001
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ14011+0252']
		if indices != []:
			data['SdV'][indices[0]]=2.60
			data['eSdV'][indices[0]]=0.21
			data['FWHM'][indices[0]]=191
			data['eFWHM'][indices[0]]=11
			data['z'][indices[0]]=2.56530
			data['ez'][indices[0]]=0.00001
			data['ID'][indices[1]]='REMOVE'
		#    SMMJ16368+4057: Neri+03 (2.30 +/- 0.2), Bothwell+13 (1.97 +/- 0.14), Tacconi+06 (2.30 +/- 0.3)
		#                    we take the weighted average: sdv = 2.11  +/-  0.11
		#                                                  fwhm = 776 +/- 40
		#                                                  z_co = 2.38343 +/- 0.00001
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ16368+4057']
		if indices != []:
			data['SdV'][indices[0]]=2.11
			data['eSdV'][indices[0]]=0.11
			data['FWHM'][indices[0]]=776
			data['eFWHM'][indices[0]]=40
			data['z'][indices[0]]=2.38343
			data['ez'][indices[0]]=0.00001
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
		#    SMMJ16366+4105: Greve+05 (1.80 +/- 0.2), Tacconi+06 (1.80 +/- 0.2), Bothwell+13 (1.5 +/- 0.2)
		#                    we take the weighted average: sdv = 1.70  +/-  0.12
		#                                                  fwhm = 802 +/- 40
		#                                                  z_co = 2.45453 +/- 0.00001
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ16366+4105']
		if indices != []:
			data['SdV'][indices[0]]=1.70
			data['eSdV'][indices[0]]=0.12
			data['FWHM'][indices[0]]=802
			data['eFWHM'][indices[0]]=40
			data['z'][indices[0]]=2.45453
			data['ez'][indices[0]]=0.00001
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
		#	 SMMJ2135-0102: Danielson+10 (13.20 +/- 0.1), Danielson+11(13.20 +/- 0.1)
		#	                 We take just take one of them as they are identical
		indices=[i for i, item in enumerate(data['ID']) if item == 'SMMJ2135-0102']
		if indices != []:
			data['SdV'][indices[0]]=13.2
			data['eSdV'][indices[0]]=0.1
			data['ID'][indices[1]]='REMOVE'
		#IRASF10214+4724: 
		#  	2.2856	0.0003		150	-999	4.4	0.7		Tsuboi et al. (1992)
		#  	2.2854	0.0001		220	30		4.2	0.8		Downes et al. (1995)
		#	2.2855	0.0003		230	30		4.1	0.9		Solomon et al. (1992b)
		#	2.2854	0.0001		220	30		4.2	0.8		Downes et al. (1995)
		#  	2.2856	0.0003		150	-999	4.4	0.7		Tsuboi et al. (1992)
		#		<z> 	=       2.28542  6.54654e-05
		#		<FWHM> 	=       227      17
		#		<SdV>	=       4.3      0.3
		indices=[i for i, item in enumerate(data['ID']) if item == 'IRASF10214+4724']
		if indices != []:
			data['SdV'][indices[0]]=4.3
			data['eSdV'][indices[0]]=0.3
			data['FWHM'][indices[0]]=227.
			data['eFWHM'][indices[0]]=17.
			data['z'][indices[0]]=2.28542
			data['ez'][indices[0]]=6.54654e-05
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
			data['ID'][indices[3]]='REMOVE'
			data['ID'][indices[4]]='REMOVE'
		#VCVJ14096+5628: 
		#	2.585	0.001	370	60	2.4	0.7		Hainline et al. (2004)
		#	2.5832	0.0001	311	28	2.3	0.2		Beelen et al. (2004)
		#		<z> 	=		2.58322  9.95037e-05
		#		<FWHM> 	=       322      25
		#		<SdV>	=       2.3      0.2
		indices=[i for i, item in enumerate(data['ID']) if item == 'VCVJ14096+5628']
		if indices != []:
			data['SdV'][indices[0]]=2.3
			data['eSdV'][indices[0]]=0.2
			data['FWHM'][indices[0]]=322.
			data['eFWHM'][indices[0]]=25.
			data['z'][indices[0]]=2.58322
			data['ez'][indices[0]]=9.95037e-05
			data['ID'][indices[1]]='REMOVE'
		#H1413+117: 
		#	2.5584	0.0001	326	25	8.1		1.2	11	-999	Barvainis et al. (1994)
		#	2.5582	0.0003	352	81	14.4	4.4	11	-999	Wilner et al. (1995)
		#	2.5582	0.0003	362	23	9.9		0.6	11	-999	Barvainis et al. (1997)
		#	2.55784	0.00003	416	6	13.2	0.2	11	-999	Weiss et al. (2003)         
		#		<z> 	=	    2.55789  2.84747e-05
		#		<FWHM> 	=       408      6
		#		<SdV>	=       12.8     0.2
		indices=[i for i, item in enumerate(data['ID']) if item == 'H1413+117']
		if indices != []:
			data['SdV'][indices[0]]=12.8
			data['eSdV'][indices[0]]=0.2
			data['FWHM'][indices[0]]=408.
			data['eFWHM'][indices[0]]=6.
			data['z'][indices[0]]=2.55789
			data['ez'][indices[0]]=2.84747e-05
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
			data['ID'][indices[3]]='REMOVE'
	#CO(4-3)
	if transition == '12CO(4-3)':
		#APM08279+5255: 
		#	 3.9115	0.001	490	60	3.7	0.4	4	-999	Weiss et al. (2007)
		#	 3.9118	0.0003	470	17	3.8	0.4	4	-999	Weiss et al. (2007)
		#	 3.9114	0.0003	480	35	3.7	0.5	4	-999	Downes et al. (1999)        
		#		<z> 	=	    3.91160  0.000207514
		#		<FWHM> 	=       473      15
		#		<SdV>	=       3.7      0.2
		indices=[i for i, item in enumerate(data['ID']) if item == 'APM08279+5255']
		if indices != []:
			data['SdV'][indices[0]]=3.7
			data['eSdV'][indices[0]]=0.2
			data['FWHM'][indices[0]]=473.
			data['eFWHM'][indices[0]]=15.
			data['z'][indices[0]]=3.91160
			data['ez'][indices[0]]=0.000207514
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
	#CO(7-6)
	if transition == '12CO(7-6)':
		#IRASF10214+4724: 
		#	 2.2856	0.0003	210	40	7.1		2		12	-999	Downes & Solomon in prep??  
		#	 2.2856	0.0003	248	30	5.43	0.56	12	-999	Ao et al. (2008)
		#		<z> 	=	    2.2856   0.0003
		#		<FWHM> 	=       234      24
		#		<SdV>	=       5.6      0.5
		indices=[i for i, item in enumerate(data['ID']) if item == 'IRASF10214+4724']
		if indices != []:
			data['SdV'][indices[0]]=5.6
			data['eSdV'][indices[0]]=0.5
			data['FWHM'][indices[0]]=234.
			data['eFWHM'][indices[0]]=24.
			data['z'][indices[0]]=2.2856
			data['ez'][indices[0]]=0.0003
			data['ID'][indices[1]]='REMOVE'
		#H1413+117: 
		#	 2.5582	0.0003	376	-999	47.3	2.2	11	-999	Barvainis et al. (1997)
		#	 2.5582	0.0003	480	35		50.1	2.8	11	-999	Alloin et al. (1997)
		#	 2.5582	0.0003	339	21		41		4	11	-999	Yun et al. (1997)
		#		<z> 	=	    2.5582   0.0003
		#		<FWHM> 	=       376      18
		#		<SdV>	=       47       1.6
		indices=[i for i, item in enumerate(data['ID']) if item == 'H1413+117']
		if indices != []:
			data['SdV'][indices[0]]=47.
			data['eSdV'][indices[0]]=1.6
			data['FWHM'][indices[0]]=376.
			data['eFWHM'][indices[0]]=18.
			data['z'][indices[0]]=2.5582
			data['ez'][indices[0]]=0.0003
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
	#CO(9-8)
	if transition == '12CO(9-8)':
		#APM08279+5255:
		#	 3.9111	0.0006	480		40		11.1	2.2	4	-999	Weiss et al. (2007)
		#	 3.9119	0.0003	460		22		12.5	2.5	4	-999	Weiss et al. (2007)
		#	 3.9109	0.0002	-999	-999	9.1		0.8	4	-999	Downes et al. (1999)        
		#		<z> 	=	    3.91120  0.000160357
		#		<FWHM> 	=       465      19
		#		<SdV>	=       9.6      0.7
		indices=[i for i, item in enumerate(data['ID']) if item == 'APM08279+5255']
		if indices != []:
			data['SdV'][indices[0]]=9.6
			data['eSdV'][indices[0]]=0.7
			data['FWHM'][indices[0]]=465.
			data['eFWHM'][indices[0]]=19.
			data['z'][indices[0]]=3.91120
			data['ez'][indices[0]]=0.000160357
			data['ID'][indices[1]]='REMOVE'
			data['ID'][indices[2]]='REMOVE'
	#[CI]609
	if transition == '[CI]609':
		#H1413+117: Weiss+05 (3.9+/-0.6),  Barvainis+97 (3.6 +/- 0.4)
		#				 we take the weighted average:     sdv = 3.7  +/-  0.3
		#                                                  fwhm = 404 +/- 37 
		#                                                  z_co = 2.5579 +/- -999
		indices=[i for i, item in enumerate(data['ID']) if item == 'H1413+117']
		if indices != []:
			data['SdV'][indices[0]]=3.7
			data['eSdV'][indices[0]]=0.3
			data['FWHM'][indices[0]]=404.
			data['eFWHM'][indices[0]]=37.
			data['z'][indices[0]]=2.5579
			data['ez'][indices[0]]=-999
			data['ID'][indices[1]]='REMOVE'
		#H-ATLASJ090740.0-004200: z=-999
		indices=[i for i, item in enumerate(data['ID']) if item == 'H-ATLASJ090740.0-004200']
		if indices != []:
			data['z'][indices[0]]=1.577
		#H-ATLASJ090302.9-014128-17a: z=-999
		indices=[i for i, item in enumerate(data['ID']) if item == 'H-ATLASJ090302.9-014128-17a']
		if indices != []:
			data['z'][indices[0]]=0.942



	indices_keep=[i for i, item in enumerate(data['ID']) if item != 'REMOVE']
	data=data[indices_keep]

	return data




#
#
#
def DeLense_Fluxes(data):
	"""De-lenses fluxes and preserves undefined and/or upper limits"""

	#where eSdV is undefined, then L_transition is undefined
	indices_undefined=[i for i, item in enumerate(data['eSdV']) if item == -999]

    #where SdV is upper limit, then L_transition is upper limit
	indices_upper_limit=[i for i, item in enumerate(data['eSdV']) if item == 99]

	data['SdV']=data['SdV']/data['magnification']
	data['eSdV']=data['eSdV']/data['magnification']

	if indices_undefined != []:
		for j in indices_undefined:
			data['eSdV'][j]=-999

	if indices_upper_limit != []:
		for j in indices_upper_limit:
			data['eSdV'][j]=99

	return data




#
#
#
def List_EMGs(data):
	"""Outputs the content of data in a nice, easily readable manner"""	

	j=0
	print '%s %37s %8s %9s %8s %8s %7s %12s %11s %17s' % ('ID','z','line','u','FWHM','eFWHM','SdV','eSdV','L','eL')
	print '%s %37s %7s %7s %11s %7s %12s %11s %14s %16s' % ('  ',' ','    ',' ','km/s','km/s','[Jy km/s]','[Jy km/s]','[K km/s pc^2','[K km/s pc^2]')
	for i in data:
		print '%s %8.4f %s %7s %7i %7i %9.2f %11.2f %15.2e %16.2e' % (data['ID'][j].ljust(33),data['z'][j],data['transition'][j],data['magnification'][j],data['FWHM'][j],data['eFWHM'][j],data['SdV'][j],data['eSdV'][j],data['L_transition'][j],data['eL_transition'][j])
		j=j+1




#
#
#
def Get_Line_Luminosity(z, SdV, transition, *unit):
	"""This function calculates the line luminosity for a given redshift (z), transition line
	flux density (sdv, in units of Jy km/s). The output luminosity is in units of K km/s pc^2 or
	Lsolar if 'Lsolar' keyword is set"""

	d_L = cd.luminosity_distance(z, **cosmo)   #[Mpc]

	f=open('../../frequencies/frequencies.dat','r')
	lines=f.readlines()
	f.close()

	trans=[]
	frq_r=[]
	for line in lines:
		p=line.split()
		if p != []:
			trans.append(p[0])
			frq_r.append(p[1])

	frq_r=[float(x) for x in frq_r]
	trans=np.array(trans)

	indices=[i for i,x in enumerate(trans) if transition in x]
	frq_r=[frq_r[i] for i in indices]
	frq_r=np.array(frq_r)/1.E3  #[GHz]
	frq_o=(frq_r/(1.+z))        #[GHz]

	L_transition=3.25E7*SdV*(1./(frq_o*frq_o))*d_L*d_L/((1.0+z)**3.)    #[K km/s pc^2]

	if unit == 'Lsolar':
		L_transition=3.18E4*((frq_r/100.)**3.)*(L_transition/1.E9)             #[Lsolar]

	#If SdV is undefined, then L_transition is undefined
	indices=[i for i, item in enumerate(SdV) if item == -999]
	if indices != []:
		for j in indices:
			L_transition[j]=-999
	#If SdV is upper limit, then L_transition is upper limit
	indices=[i for i, item in enumerate(SdV) if item == 99]
	if indices != []:
		for j in indices:
			L_transition[j]=99

	return L_transition



#
#
#
def Get_SdV(z,frq_r,L_line,L_units):
    """ PURPOSE: 
                Computes the velocity-integrated line flux (SdV)
                for a given source redshift, rest-frame line frequency, 
                and line luminosity.
               
        INPUT:
                z            :       source redshift
                frq_r        :       rest-frame frequency [GHz]
                L_line       :       line luminosity
                L_units      :       'prime': [L_line] = K km/s pc^2 or 
                                     'solar': = [L_line] = Lsolar

		OUTPUT:
				SdV			 :		 Line flux [Jy km/s]
                
        HISTORY: Feb 2015   :       created by t.greve@ucl.ac.uk        
    """
    
    #Calculate luminosity distance in [Mpc]
    d_L = cd.luminosity_distance(z, **cosmo) 

    #calculate observed frequency
    frq_o = frq_r/(1.0+z)
    
    if L_units == 'prime':
		SdV = (L_line/3.25E7)*(frq_o**2)*((1.0+z)**3)/(d_L**2)
    elif L_units == 'solar':
        SdV = (((L_line/1.04E-3)*(1.+z))/(d_L*d_L))/frq_r
    else:
        print 'Wrong input'
        return -1
    
    return SdV



#
#
#
def Line_Flux_Conversion(frq,SdV,conversion='Jansky2SI'):
	""" PURPOSE: 
			Converts line fluxes given in units of Jy km/s to
			units of W m^-2, or vice versa. This is particularly 
			useful when dealing with FIR fine-structure lines, where
			integrated line fluxes are often times given in units of W m^-2.
	           
		INPUT:
			frq             :       approximate line center frequency [GHz]
			SdV             :       integrated line flux in units of Jy km/s or W m^-2
	
		OUTPUT:
				            :       integrated line flux in units of Jy km/s or W m^-2
	            
		HISTORY: Feb 2015   :       created by t.greve@ucl.ac.uk        
	"""

	if conversion == 'Jansky2SI':
		return SdV * (1.E-26) * (frq*1.E9) * (1./3.E5)  #[W m^-2]
	elif conversion == 'SI2Jansky':
		return (SdV/1.E-26) * 3.E5 * (1./(frq*1.E9))    #[Jy km/s]
	else:
		print 'Conversion must be specified'
		return -1
